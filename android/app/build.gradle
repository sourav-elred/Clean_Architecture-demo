def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {

    // ----- BEGIN flavorDimensions (autogenerated by flutter_flavorizr) -----
    flavorDimensions "clean-architecture-flavor"

    productFlavors {
        prod {
            dimension "clean-architecture-flavor"
            applicationId "clean.architecture"
            resValue "string", "app_name", "CleanArchitecture"
        }
        beta {
            dimension "clean-architecture-flavor"
            applicationId "clean.architecture.beta"
            resValue "string", "app_name", "CleanArchitecture-Beta"
        }
        qc {
            dimension "clean-architecture-flavor"
            applicationId "clean.architecture.qc"
            resValue "string", "app_name", "CleanArchitecture-QC"
        }
    }

    // ----- END flavorDimensions (autogenerated by flutter_flavorizr) -----

    signingConfigs {
        prod {
            storeFile file(PROD_STORE_FILE)
            storePassword PROD_STORE_PASSWORD
            keyAlias PROD_KEY_ALIAS
            keyPassword PROD_KEY_PASSWORD
            v1SigningEnabled true
            v2SigningEnabled true
        }
        beta {
            storeFile file(BETA_STORE_FILE)
            storePassword BETA_STORE_PASSWORD
            keyAlias BETA_KEY_ALIAS
            keyPassword BETA_KEY_PASSWORD
            v1SigningEnabled true
            v2SigningEnabled true
        }
        qc {
            storeFile file(QC_STORE_FILE)
            storePassword QC_STORE_PASSWORD
            keyAlias QC_KEY_ALIAS
            keyPassword QC_KEY_PASSWORD
            v1SigningEnabled true
            v2SigningEnabled true
        }
    }

    compileSdkVersion 31

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        applicationId "exchange.position"
        minSdkVersion 21
        targetSdkVersion 31
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        checkReleaseBuilds false
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}
